#==============================================================================
# Copyright (c) 2014 Evgeny Proydakov <lord.tiran@gmail.com>
#==============================================================================

MACRO(ADD_BOOST_TEST args)

MESSAGE(STATUS "CREATE boost unittest ${ARGV0}")

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

FIND_PACKAGE(Boost COMPONENTS unit_test_framework REQUIRED)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

ADD_EXECUTABLE(${ARGV0} ${ARGN})
SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES LINKER_LANGUAGE CXX)
SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES FOLDER ${TESTS_FOLDERS})
ADD_TEST(NAME ${ARGV0} COMMAND ${EXECUTABLE_OUTPUT_PATH}/${ARGV0})

IF(MSVC)
    SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES COMPILE_FLAGS "/EHa")
ENDIF(MSVC)

TARGET_LINK_LIBRARIES(${ARGV0} ${Boost_THREAD_LIBRARY})
TARGET_LINK_LIBRARIES(${ARGV0} ${Boost_SYSTEM_LIBRARY})
TARGET_LINK_LIBRARIES(${ARGV0} ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
TARGET_LINK_LIBRARIES(${ARGV0} ${Boost_CHRONO_LIBRARY})

IF(ANDROID)
    TARGET_LINK_LIBRARIES(${ARGV0} -lgnustl_shared -lcrystax_shared)
ENDIF(ANDROID)

SOURCE_GROUP(".test" FILES 
    ${ARGN})

ENDMACRO(ADD_BOOST_TEST)

#==============================================================================

MACRO(ADD_MANUAL_TEST args)

MESSAGE(STATUS "CREATE manual test ${ARGV0}")

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

ADD_EXECUTABLE(${ARGV0} ${ARGN})
SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES LINKER_LANGUAGE CXX)
SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES FOLDER ${TESTS_FOLDERS})

IF(MSVC)
    SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES COMPILE_FLAGS "/EHa")
ENDIF(MSVC)

SOURCE_GROUP("source" FILES 
    ${ARGN}
    )

ENDMACRO(ADD_MANUAL_TEST)

#==============================================================================

MACRO(ADD_MODULE args)

MESSAGE(STATUS "CREATE module ${ARGV0}")

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

ADD_LIBRARY(${ARGV0} ${ARGN})
SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES LINKER_LANGUAGE CXX)
SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES FOLDER ${MODULES_FOLDERS})

SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES DEBUG_POSTFIX d)

IF(MSVC)
    SET_TARGET_PROPERTIES(${ARGV0} PROPERTIES COMPILE_FLAGS "/EHa")
ENDIF(MSVC)

ENDMACRO(ADD_MODULE)

#==============================================================================

MACRO(SUBDIRLIST result curdir)
  FILE(GLOB children RELATIVE ${curdir} ${curdir}/*)
  SET(dirlist "")
  FOREACH(child ${children})
    IF(IS_DIRECTORY ${curdir}/${child})
        SET(dirlist ${dirlist} ${child})
    ENDIF()
  ENDFOREACH()
  SET(${result} ${dirlist})
ENDMACRO()

#==============================================================================
# Copyright (c) 2019 Alexey Barashkov

MACRO(SET_PROJECT_VER version_str)
    set(PROJECT_VERSION_MAJOR 0)
    set(PROJECT_VERSION_MINOR 0)
    set(PROJECT_VERSION_PATCH 0)
    set(PROJECT_VERSION_TWEAK 0)

    set(VERSION_LIST "")

    string(REPLACE "-" "." DOT_SEPARATED ${version_str})
    string(REPLACE "." ";" DOT_SEPARATED ${DOT_SEPARATED})
    foreach(VERSION_PART ${DOT_SEPARATED})
        if (VERSION_PART MATCHES "^[0-9]+$")
            math(EXPR VERSION_PART "${VERSION_PART}")
            list(APPEND VERSION_LIST "${VERSION_PART}")
        endif()
    endforeach(VERSION_PART)

    list(LENGTH VERSION_LIST VERSION_LIST_LENGTH)
    if(${VERSION_LIST_LENGTH} GREATER 0)
        list(GET VERSION_LIST 0 PROJECT_VERSION_MAJOR)
    endif()
    if(${VERSION_LIST_LENGTH} GREATER 1)
        list(GET VERSION_LIST 1 PROJECT_VERSION_MINOR)
    endif()
    if(${VERSION_LIST_LENGTH} GREATER 2)
        list(GET VERSION_LIST 2 PROJECT_VERSION_PATCH)
    endif()
    if(${VERSION_LIST_LENGTH} GREATER 3)
        list(GET VERSION_LIST 3 PROJECT_VERSION_TWEAK)
    endif()
ENDMACRO()
